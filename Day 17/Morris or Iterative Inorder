     TreeNode* right(TreeNode*node,TreeNode*curr)
    {
       while(node->right!=NULL && node->right!=curr)
       {
           node=node->right;
       }
        return node;
    }
    
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>ans;
        TreeNode*curr=root;
        while(curr!=NULL)
        {
            TreeNode*left=curr->left;
            if(left==NULL)
            {
                ans.push_back(curr->val);curr=curr->right;
            }
            else
            {
                TreeNode*rmn=right(left,curr);
                if(rmn->right==NULL){rmn->right=curr;curr=curr->left;}
                else 
                {rmn->right=NULL;ans.push_back(curr->val);curr=curr->right;}
            }
            }
        return ans;
    }
